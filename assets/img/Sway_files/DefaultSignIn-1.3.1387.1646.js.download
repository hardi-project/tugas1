var AuthType;(function(a){a[a["aad"]=1]="aad";a[a["msa"]=2]="msa"})(AuthType||(AuthType={}));var Operation;(function(a){var b="Redirect";a[a[b]=1]=b;a[a["Error"]=2]="Error"})(Operation||(Operation={}));var ErrorCode;(function(a){var f="NonPreferredResponseIgnored",e="UnknownError",d="NoAccountFound",c="InvalidDataReceivedFromIdp",b="InvalidConfigurations";a[a[b]=100]=b;a[a[c]=105]=c;a[a[d]=110]=d;a[a["TimeOut"]=115]="TimeOut";a[a[e]=120]=e;a[a[f]=125]=f})(ErrorCode||(ErrorCode={}));var TimerUtils;(function(a){function b(){var a=(new Date).getTime();return {get seconds(){var b=Math.ceil(((new Date).getTime()-a)/1e3);return b},get ms(){var b=(new Date).getTime()-a;return b},get formattedSeconds(){var a=Math.ceil(this.seconds()/1e3)+"s";return a},get formattedMs(){var a=this.ms()+"ms";return a}}}a.timer=b})(TimerUtils||(TimerUtils={}));var IframeUtils;(function(a){function c(c,b){var a=document.createElement("iframe");a.style.display="none";a.id=b;a.src=c;return a}a.getIframe=c;function b(b){if(typeof b=="undefined"||b==null)return false;var a=document.getElementById(b);a!=null&&a.parentNode!=null&&a.parentNode.removeChild(a);return true}a.deleteIframe=b})(IframeUtils||(IframeUtils={}));var Constants;(function(a){var c=function(){function a(){}return a}();c.msaMeSrf="/Me.srf?wa=wsignin1.0&wreply=";c.aadSavedUsers="/savedusers?wreply=";a.UriFormats=c;var d=function(){function a(){}return a}();d.http="http";d.https="https";a.UriScheme=d;var e=function(){function a(){}return a}();e.separator="://";a.UriSeparator=e;var b=function(){function a(){}return a}();b.remembered="1";b.signedIn="2";b.interrupted="3";a.AuthState=b;var f=function(){function a(){}return a}();f.msaFed="MSAFED";a.Idp=f})(Constants||(Constants={}));var LoggingUtils;(function(b){function a(b,a){if(a!=null&&a!==undefined&&!a)return false;if(b==null&&b===undefined)return false;return true}function e(b,c){if(!a(b,c))return;console.log(b)}b.log=e;function d(b,c){if(!a(b,c))return;console.warn(b)}b.warn=d;function c(b,c){if(!a(b,c))return;console.error(b)}b.error=c})(LoggingUtils||(LoggingUtils={}));var IdpUserResult=function(){function a(a){var b=this;b.upn=a.upn;b.totalSignedInUsers=a.totalSignedInUsers;b.validSignedInUsers=a.validSignedInUsers;b.errorCode=a.errorCode;b.errorMessage=a.errorMessage}a.prototype.containsValidUser=function(){var c=false,b=null,a=this;if(a.errorMessage!=b&&a.errorMessage!==undefined&&a.errorMessage!=="")return c;if(a.totalSignedInUsers==b||a.totalSignedInUsers===undefined||a.totalSignedInUsers<1)return c;if(a.upn==b||a.upn===undefined||a.upn==="")return c;if(a.validSignedInUsers==b||a.validSignedInUsers===undefined||a.validSignedInUsers<1)return c;return true};return a}(),DefaultSignInOptions=function(){var b=false,a=null;function c(c){var d=this;d.options=c;d.preferredIdp=c.preferredIdp;d.aadConfig=c.aadConfig;d.msaConfig=c.msaConfig;if(c.msaFedEnabled==a||c.msaFedEnabled===undefined)d.msaFedEnabled=b;else d.msaFedEnabled=c.msaFedEnabled;if(c.timeout==a||c.timeout===undefined)d.timeout=0;else d.timeout=c.timeout;if(c.enableConsoleLogging==a||c.enableConsoleLogging===undefined)d.enableConsoleLogging=b;else d.enableConsoleLogging=c.enableConsoleLogging}c.prototype.isValid=function(){var c=this,d;if(c.preferredIdp==a||c.preferredIdp===undefined){d="preferredIdp  is a required parameter. It cannot be null or undefined";LoggingUtils.error(d,enableConsoleLog);return {isPassed:b,errorMessage:d}}if(AuthType[c.preferredIdp]!==AuthType[AuthType.aad]&&AuthType[c.preferredIdp]!==AuthType[AuthType.msa]){d="preferredIdp is set to something other than 'AAD' and 'MSA'.";LoggingUtils.error(d,enableConsoleLog);return {isPassed:b,errorMessage:d}}if((c.aadConfig==a||c.aadConfig===undefined)&&(c.msaConfig==a||c.msaConfig===undefined)){d="Both AAD and MSA configurations are null or undefined. At least one of the IDP configurations should be set.";LoggingUtils.error(d,enableConsoleLog);return {isPassed:b,errorMessage:d}}if(c.aadConfig!==a&&c.aadConfig!==undefined){if(c.aadConfig.appId==a||c.aadConfig.appId===undefined||c.aadConfig.appId===""){d="AadConfig: appId is a required parameter. It cannot be null, undefined or empty.";LoggingUtils.error(d,enableConsoleLog);return {isPassed:b,errorMessage:d}}if(c.aadConfig.host==a||c.aadConfig.host===undefined||c.aadConfig.host===""){d="AadConfig: host is a required parameter. It cannot be null, undefined or empty.";LoggingUtils.error(d,enableConsoleLog);return {isPassed:b,errorMessage:d}}if(c.aadConfig.replyUri==a||c.aadConfig.replyUri===undefined||c.aadConfig.replyUri===""){d="AadConfig: replyUri is a required parameter. It cannot be null, undefined or empty.";LoggingUtils.error(d,enableConsoleLog);return {isPassed:b,errorMessage:d}}}if(c.msaConfig!==a&&c.msaConfig!==undefined){if(c.msaConfig.host==a||c.msaConfig.host===undefined||c.msaConfig.host===""){d="MsaConfig: host is a required parameter. It cannot be null, undefined or empty.";LoggingUtils.error(d,enableConsoleLog);return {isPassed:b,errorMessage:d}}if(c.msaConfig.replyUri==a||c.msaConfig.replyUri===undefined||c.msaConfig.replyUri===""){d="MsaConfig: replyUri  is a required parameter. It cannot be null, undefined or empty.";LoggingUtils.error(d,enableConsoleLog);return {isPassed:b,errorMessage:d}}}if(c.msaFedEnabled==a||c.msaFedEnabled===undefined){d="msaFedEnabled is a required parameter. It cannot be null or undefined";LoggingUtils.error(d,enableConsoleLog);return {isPassed:b,errorMessage:d}}if(c.enableConsoleLogging==a||c.enableConsoleLogging===undefined){d="enableConsoleLogging is a required parameter. It cannot be null or undefined";LoggingUtils.error(d,enableConsoleLog);return {isPassed:b,errorMessage:d}}LoggingUtils.log("Validation of configurations options finished successfully.",enableConsoleLog);return {isPassed:true,errorMessage:a}};return c}();function getDefaultAadUser(a){var f="aadData.userList[",d=null,b;if(a==d||a===undefined){b="Null or Undefined AAD user data.";LoggingUtils.log(b,enableConsoleLog);return {upn:d,validSignedInUsers:0,totalSignedInUsers:0,errorMessage:b}}if(a.error!=d&&a.error!==""){b="Error '"+a.error+"' found in the data.";LoggingUtils.log(b,enableConsoleLog);return {upn:d,validSignedInUsers:0,totalSignedInUsers:0,errorCode:a.error,errorMessage:b}}if(a.userList==d||a.userList===undefined){b="AAD UserList is null or undefined.";LoggingUtils.log(b,enableConsoleLog);return {upn:d,validSignedInUsers:0,totalSignedInUsers:0,errorMessage:b}}if(a.userList.length<=0){b="No signed in AAD user found.";LoggingUtils.log(b,enableConsoleLog);return {upn:d,validSignedInUsers:0,totalSignedInUsers:0,errorMessage:b}}for(var e=[],c=0;c<a.userList.length;c++){if(a.userList[c]==d||a.userList[c]===undefined){LoggingUtils.warn(f+c+"] is null or undefined. Skipping this entry.",enableConsoleLog);continue}if(a.userList[c].idp.toLocaleUpperCase()===Constants.Idp.msaFed&&!msaFedEnabled){LoggingUtils.warn(f+c+"] is for MsaFed. Skipping this entry based on provided configuration.",enableConsoleLog);continue}if(a.userList[c].memberName==d||a.userList[c].memberName===undefined||a.userList[c].memberName===""){LoggingUtils.warn("Member name (i.e. UPN/email-address) is null, undefined or empty. This is unexpected. Skipping "+c+" entry.",enableConsoleLog);continue}if(a.userList[c].authenticatedState!==Constants.AuthState.signedIn){LoggingUtils.warn(a.userList[c].memberName+"'s authState is '"+a.userList[c].authenticatedState+"'. Skipping this entry.",enableConsoleLog);continue}e.push(a.userList[c])}if(e.length!==1){b="Found '"+e.length+"' AAD users in required "+Constants.AuthState.signedIn+" auth state.Returning null UPN. Null UPN is an expected response so after re-direction to AAD portal user is given choice to choose specific UPN to sign in with.";LoggingUtils.log(b,enableConsoleLog);return {upn:d,validSignedInUsers:e.length,totalSignedInUsers:a.userList.length,errorMessage:b}}if(e.length===1)return {upn:e[0].memberName,validSignedInUsers:e.length,totalSignedInUsers:a.userList.length};b="Unknown error occurred while finding default signed in AAD user.";LoggingUtils.error(b,enableConsoleLog);return {upn:d,validSignedInUsers:0,totalSignedInUsers:0,errorMessage:b}}function getDefaultMsaUser(b){var c=null,a;if(b==c||b===undefined){a="Null or Undefined MSA user data.";LoggingUtils.log(a,enableConsoleLog);return {upn:c,validSignedInUsers:0,totalSignedInUsers:0,errorMessage:a}}if(b.error!=c&&b.error!==""){a="Error '"+b.error+"' found in the data.";LoggingUtils.log(a,enableConsoleLog);return {upn:c,validSignedInUsers:0,totalSignedInUsers:0,errorCode:b.error,errorMessage:a}}if(b.userList==c||b.userList===undefined){a="MSA UserList is null or undefined.";LoggingUtils.log(a,enableConsoleLog);return {upn:c,validSignedInUsers:0,totalSignedInUsers:0,errorMessage:a}}if(b.userList.length<=0){a="No signed in MSA user found.";LoggingUtils.log(a,enableConsoleLog);return {upn:c,validSignedInUsers:0,totalSignedInUsers:0,errorMessage:a}}if(b.userList.length>1){a="Found '"+b.userList.length+"' signed in MSA users. This is an unexpected scenario.";LoggingUtils.log(a,enableConsoleLog);return {upn:c,validSignedInUsers:0,totalSignedInUsers:b.userList.length,errorMessage:a}}if(b.userList.length===1){if(b.userList[0]==c||b.userList[0]===undefined){a="Null or undefined MSA user data found. This is unexpected.";LoggingUtils.error(a,enableConsoleLog);return {upn:c,validSignedInUsers:0,totalSignedInUsers:b.userList.length,errorMessage:a}}if(b.userList[0].memberName==c||b.userList[0].memberName===undefined||b.userList[0].memberName===""){a="Member name (i.e.UPN / email - address) is null, undefined or empty. This is unexpected.";LoggingUtils.error(a,enableConsoleLog);return {upn:c,validSignedInUsers:0,totalSignedInUsers:b.userList.length,errorMessage:a}}else return {upn:b.userList[0].memberName,validSignedInUsers:b.userList.length,totalSignedInUsers:b.userList.length}}a="Unknown error occurred while finding default signed in MSA user.";LoggingUtils.error(a,enableConsoleLog);return {upn:c,validSignedInUsers:0,totalSignedInUsers:0,errorMessage:a}}function findDefaultSignedInUser(e,q,p,k,j){var i=true,f=false,b=null,g=TimerUtils.timer(),m=convertMsaUserData(q),l=convertAadUserData(p),h=[{msaPerformance:m!==b&&m!==undefined?m.performance:0},{aadPerformance:l!==b&&l!==undefined?l.performance:0}],o=getDefaultMsaUser(m),n=getDefaultAadUser(l),d;if(o==b||n==b){d={preferredIdp:AuthType[e],signedInMsa:0,signedInAad:0,validSignedInAad:0,timeForMsaInMsec:0,timeForAadInMsec:0,timeToProcessAfterReceivedInMsec:g.ms,foundDefault:f,foundPreferred:f,errorCode:ErrorCode[ErrorCode.InvalidDataReceivedFromIdp],errorMessage:"Data received from AAD or MSA wasn't expected.",moreinfo:h};return {op:Operation[Operation.Error],idp:AuthType[e],upn:b,errorCode:ErrorCode[ErrorCode.InvalidDataReceivedFromIdp],telemetry:d}}var c=new IdpUserResult(o),a=new IdpUserResult(n);if(AuthType[e]===AuthType[AuthType.aad]&&a.containsValidUser()){d={preferredIdp:AuthType[e],signedInMsa:c.totalSignedInUsers,signedInAad:a.totalSignedInUsers,validSignedInAad:a.validSignedInUsers,timeForMsaInMsec:k,timeForAadInMsec:j,timeToProcessAfterReceivedInMsec:g.ms,foundDefault:i,foundPreferred:i,errorCodeMsa:c.errorCode,errorMessageMsa:c.errorMessage,errorCode:b,errorMessage:b,moreinfo:h};return {op:Operation[Operation.Redirect],idp:AuthType[AuthType.aad],upn:a.upn,errorCode:b,telemetry:d}}if(AuthType[e]===AuthType[AuthType.aad]&&a.validSignedInUsers>1){d={preferredIdp:AuthType[e],signedInMsa:c.totalSignedInUsers,signedInAad:a.totalSignedInUsers,validSignedInAad:a.validSignedInUsers,timeForMsaInMsec:k,timeForAadInMsec:j,timeToProcessAfterReceivedInMsec:g.ms,foundDefault:f,foundPreferred:i,errorCodeMsa:c.errorCode,errorMessageMsa:c.errorMessage,errorCode:b,errorMessage:b,moreinfo:h};return {op:Operation[Operation.Redirect],idp:AuthType[AuthType.aad],upn:b,errorCode:b,telemetry:d}}if(AuthType[e]===AuthType[AuthType.msa]&&c.containsValidUser()){d={preferredIdp:AuthType[e],signedInMsa:c.totalSignedInUsers,signedInAad:a.totalSignedInUsers,validSignedInAad:a.validSignedInUsers,timeForMsaInMsec:k,timeForAadInMsec:j,timeToProcessAfterReceivedInMsec:g.ms,foundDefault:i,foundPreferred:i,errorCodeAad:a.errorCode,errorMessageAad:a.errorMessage,errorCode:b,errorMessage:b,moreinfo:h};return {op:Operation[Operation.Redirect],idp:AuthType[AuthType.msa],upn:c.upn,errorCode:b,telemetry:d}}d={preferredIdp:AuthType[e],signedInMsa:c.totalSignedInUsers,signedInAad:a.totalSignedInUsers,validSignedInAad:a.validSignedInUsers,timeForMsaInMsec:k,timeForAadInMsec:j,timeToProcessAfterReceivedInMsec:g.ms,foundDefault:i,foundPreferred:f,errorCodeMsa:c.errorCode,errorCodeAad:a.errorCode,errorMessageMsa:c.errorMessage,errorMessageAad:a.errorMessage,errorCode:b,errorMessage:b,moreinfo:h};if(a.containsValidUser())return {op:Operation[Operation.Redirect],idp:AuthType[AuthType.aad],upn:a.upn,errorCode:b,telemetry:d};if(a.validSignedInUsers>1)return {op:Operation[Operation.Redirect],idp:AuthType[AuthType.aad],upn:b,errorCode:b,telemetry:d};if(c.containsValidUser())return {op:Operation[Operation.Redirect],idp:AuthType[AuthType.msa],upn:c.upn,errorCode:b,telemetry:d};if(c.errorCode==ErrorCode[ErrorCode.TimeOut]&&a.errorCode==ErrorCode[ErrorCode.TimeOut]){d={preferredIdp:AuthType[e],signedInMsa:c.totalSignedInUsers,signedInAad:a.totalSignedInUsers,validSignedInAad:a.validSignedInUsers,timeForMsaInMsec:k,timeForAadInMsec:j,timeToProcessAfterReceivedInMsec:g.ms,foundDefault:f,foundPreferred:f,errorCodeMsa:c.errorCode,errorCodeAad:a.errorCode,errorMessageMsa:c.errorMessage,errorMessageAad:a.errorMessage,errorCode:ErrorCode[ErrorCode.NoAccountFound],errorMessage:b,moreinfo:h};return {op:Operation[Operation.Error],idp:b,upn:b,errorCode:ErrorCode[ErrorCode.NoAccountFound],telemetry:d}}d={preferredIdp:AuthType[e],signedInMsa:c.totalSignedInUsers,signedInAad:a.totalSignedInUsers,validSignedInAad:a.validSignedInUsers,timeForMsaInMsec:k,timeForAadInMsec:j,timeToProcessAfterReceivedInMsec:g.ms,foundDefault:f,foundPreferred:f,errorCodeMsa:c.errorCode,errorCodeAad:a.errorCode,errorMessageMsa:c.errorMessage,errorMessageAad:a.errorMessage,errorCode:ErrorCode[ErrorCode.NoAccountFound],errorMessage:b,moreinfo:h};return {op:Operation[Operation.Error],idp:b,upn:b,errorCode:ErrorCode[ErrorCode.NoAccountFound],telemetry:d}}function convertAadUserData(b){var a=null;if(b==a||b===undefined||b===""){LoggingUtils.log("Empty AAD user data. Returning null.",enableConsoleLog);return a}var c;try{var e=JSON.parse(b);c=e}catch(d){LoggingUtils.error("Exception occurred while parsing received MSA data. Returning null. Exception details: "+d.message+".",enableConsoleLog);return a}if(typeof c==="undefined"){LoggingUtils.error("Couldn't parse provided AAD user data. Returning null.",enableConsoleLog);return a}return c}function convertMsaUserData(b){var a=null;if(b==a||b===undefined||b===""){LoggingUtils.log("Empty MSA user data. Returning null.",enableConsoleLog);return a}var c;try{var e=JSON.parse(b);c=e}catch(d){LoggingUtils.error("Exception occurred while parsing received MSA data. Returning null. Exception details: "+d.message+".",enableConsoleLog);return a}if(typeof c==="undefined"){LoggingUtils.error("Couldn't parse provided MSA user data. Returning null.",enableConsoleLog);return a}return c}function isValidMsaUser(d){var c=convertMsaUserData(d),a=getDefaultMsaUser(c);if(a!=null){var b=new IdpUserResult(a);return b.containsValidUser()}return false}function isValidAadUser(d){var c=convertAadUserData(d),a=getDefaultAadUser(c);if(a!=null){var b=new IdpUserResult(a);return b.containsValidUser()}return false}function getAadData(a,i){if(a===null||a===undefined){LoggingUtils.log("AAD config data is null or undefined. Skipping getting users data from AAD.",enableConsoleLog);i(null)}else{var d=""+Constants.UriScheme.https+Constants.UriSeparator.separator+a.host+Constants.UriFormats.aadSavedUsers+a.replyUri+"&appid="+a.appId;if(a.enableWindowsSso!==null&&a.enableWindowsSso!==undefined&&a.enableWindowsSso)d+="&mectrlwinsso="+a.enableWindowsSso;var g="aadIframe",h="message",c=0,b,j=IframeUtils.getIframe(d,g),f=TimerUtils.timer();function e(d){var j=""+Constants.UriScheme.https+Constants.UriSeparator.separator+a.host;if(d.origin.toLocaleUpperCase()===j.toLocaleUpperCase()){b=d.data;LoggingUtils.log("Data received from AAD PostMessage: "+b,enableConsoleLog);window.removeEventListener(h,e);IframeUtils.deleteIframe(g);i(b,f.ms-c)}}window.addEventListener(h,e,false);document.body.appendChild(j);c=f.ms;LoggingUtils.log("Requested Aad: "+c+"msec",enableConsoleLog)}}function getMsaData(a,h){if(a===null||a===undefined){LoggingUtils.log("MSA config data is null or undefined. Skipping getting users data from MSA.",enableConsoleLog);h(null)}else{var j=""+Constants.UriScheme.https+Constants.UriSeparator.separator+a.host+Constants.UriFormats.msaMeSrf+a.replyUri,f="msaIframe",g="message",c=0,b,i=IframeUtils.getIframe(j,f),e=TimerUtils.timer();function d(i){var j=""+Constants.UriScheme.https+Constants.UriSeparator.separator+a.host;if(i.origin.toLocaleUpperCase()===j.toLocaleUpperCase()){b=i.data;LoggingUtils.log("Data received from MSA PostMessage: "+b,enableConsoleLog);window.removeEventListener(g,d);IframeUtils.deleteIframe(f);h(b,e.ms-c)}}window.addEventListener(g,d,false);document.body.appendChild(i);c=e.ms;LoggingUtils.log("Requested Msa: "+c+"msec",enableConsoleLog)}}function getAadMsaData(c,f){var e=true;LoggingUtils.log("Config: "+JSON.stringify(c),enableConsoleLog);var b,a,h,g,d=false,j=function(k,m,j,l){var i=null;if(k!==i&&k!==undefined&&!d){b=k;h=m;LoggingUtils.log("Time taken to Msa user data: "+h,enableConsoleLog);if(!d&&(AuthType[c.preferredIdp]===AuthType[AuthType.msa]&&isValidMsaUser(b)||c.aadConfig===i||c.aadConfig===undefined)){LoggingUtils.log("Based on preferred IDP settings returning MSA user data as it is available (ignoring AAD).",enableConsoleLog);d=e;if(a!==i&&a!==undefined){f(b,h,a,g);return}var n={error:ErrorCode[ErrorCode.NonPreferredResponseIgnored],userList:[],idp:"aad",performance:""};f(b,h,JSON.stringify(n),0);return}}if(j!==i&&j!==undefined&&!d){a=j;g=l;LoggingUtils.log("Time taken to get AAD user data: "+g,enableConsoleLog);if(!d&&(AuthType[c.preferredIdp]===AuthType[AuthType.aad]&&isValidAadUser(a)||c.msaConfig===i||c.msaConfig===undefined)){LoggingUtils.log("Based on preferred IDP settings returning AAD user data (ignoring MSA).",enableConsoleLog);d=e;if(b!==i&&b!==undefined){f(b,h,a,g);return}var o={error:ErrorCode[ErrorCode.NonPreferredResponseIgnored],userList:[],postLogoutRedirectUriValid:false,performance:""};f(JSON.stringify(o),0,a,g);return}}if(!d&&b!==undefined&&a!==undefined){d=e;f(b,h,a,g);return}},i=TimerUtils.timer();c.timeout>0&&setTimeout(function(){if(!d){d=e;var j={error:ErrorCode[ErrorCode.TimeOut],userList:[],postLogoutRedirectUriValid:false,performance:""},c={error:ErrorCode[ErrorCode.TimeOut],userList:[],idp:"aad",performance:""};if(b!==undefined)f(b,h,JSON.stringify(c),i.ms);else if(a!==undefined)f(JSON.stringify(j),i.ms,a,g);else f(JSON.stringify(j),i.ms,JSON.stringify(c),i.ms)}},c.timeout);LoggingUtils.log("Initialized",enableConsoleLog);getMsaData(c.msaConfig,function(b,a){j(b,a,undefined,undefined)});getAadData(c.aadConfig,function(b,a){j(undefined,undefined,b,a)})}var enableConsoleLog=false,msaFedEnabled=false;function getAccount(c,g){var d=false,a=null,f=TimerUtils.timer(),e,b;if(c===undefined||c===a){b="configurations cannot be null or undefined.";LoggingUtils.error(b,enableConsoleLog);e={preferredIdp:a,signedInMsa:0,signedInAad:0,validSignedInAad:0,timeForMsaInMsec:0,timeForAadInMsec:0,timeToProcessAfterReceivedInMsec:0,timeToGetAccountInMsec:f.ms,foundDefault:d,foundPreferred:d,errorCode:ErrorCode[ErrorCode.InvalidConfigurations],errorMessage:b,moreinfo:a};g({op:Operation[Operation.Error],idp:a,upn:a,errorCode:ErrorCode[ErrorCode.InvalidConfigurations],telemetry:e})}else{enableConsoleLog=c.enableConsoleLogging;LoggingUtils.log("Started",enableConsoleLog);var h=new DefaultSignInOptions(c),i=h.isValid();if(!i.isPassed){b=i.errorMessage;LoggingUtils.error(b,enableConsoleLog);e={preferredIdp:a,signedInMsa:0,signedInAad:0,validSignedInAad:0,timeForMsaInMsec:0,timeForAadInMsec:0,timeToProcessAfterReceivedInMsec:0,timeToGetAccountInMsec:f.ms,foundDefault:d,foundPreferred:d,errorCode:ErrorCode[ErrorCode.InvalidConfigurations],errorMessage:b,moreinfo:a};LoggingUtils.log("Completed with error",enableConsoleLog);g({op:Operation[Operation.Error],idp:a,upn:a,errorCode:ErrorCode[ErrorCode.InvalidConfigurations],telemetry:e})}else getAadMsaData(h,function(c,e,b,d){var a=findDefaultSignedInUser(h.preferredIdp,c,b,e,d);a.telemetry.timeToGetAccountInMsec=f.ms;LoggingUtils.log("Completed: "+JSON.stringify(a),enableConsoleLog);g(a)})}}